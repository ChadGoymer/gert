% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/merge.R
\name{git_merge}
\alias{git_merge}
\alias{git_merge_base}
\alias{git_merge_analysis}
\alias{git_merge_stage}
\alias{git_merge_cleanup}
\alias{git_merge_state}
\title{Merging tools}
\usage{
git_merge(ref, commit_on_success = TRUE, repo = ".")

git_merge_base(ref, target = "HEAD", repo = ".")

git_merge_analysis(ref, repo = ".")

git_merge_stage(ref, repo = ".")

git_merge_cleanup(repo = ".")

git_merge_state(repo = ".")
}
\arguments{
\item{ref}{branch or commit that you want to merge}

\item{commit_on_success}{automatically create a merge commit if the merge succeeds without
conflicts. Set this to \code{FALSE} if you want to customize your commit message/author.}

\item{repo}{The path to the git repository. If the directory is not a
repository, parent directories are considered (see \link{git_find}). To disable
this search, provide the filepath protected with \code{\link[=I]{I()}}.}

\item{target}{the branch where you want to merge into. Defaults to current \code{HEAD}.}
}
\description{
Use \code{git_merge} to merge a branch into the current head. Based on how the branches
have diverged, the function will select a fast-forward or merge-commit strategy.
}
\details{
By default \code{git_merge} will automatically commit the merge. However if
\code{commit_on_success} is set to \code{FALSE} or if the merge fails with
merge-conflicts, the changes are staged but you have to run \link{git_commit} manually.

Other functions are more low-level tools that are used by \code{git_merge}. \code{git_merge_base}
finds the commit where two branches have diverged (i.e. the youngest common ancestor).

Use \code{git_merge_analysis} to test what strategy would be needed to merge a branch.
Possible outcomes are \code{"fastforward"}, \code{"normal"}, or \code{"up-to-date"}.

The \code{git_merge_stage} function applies and stages changes from another branch in the
current one, without committing anything.
}
\seealso{
Other git: 
\code{\link{branch}},
\code{\link{git_archive}},
\code{\link{git_commit}()},
\code{\link{git_config}()},
\code{\link{git_diff}()},
\code{\link{git_fetch}()},
\code{\link{git_repo}},
\code{\link{git_signature}()}
}
\concept{git}
